[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Declan\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Declan\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.6 (Oracle Corporation Java 19.0.1)
[debug]       Load.loadUnit: plugins took 77.7768ms
[debug]       Load.loadUnit: defsScala took 0.1563ms
[debug] [Loading] Scanning directory C:\Users\Declan\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Declan\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 7.9772 ms
[debug]           Load.resolveProject(global-plugins) took 21.4682ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Declan\.sbt\1.0\plugins, plugins: List(<none>))) took 46.4458ms
[debug] [Loading] Done in C:\Users\Declan\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 63.5031ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.091ms
[debug]     Load.loadUnit(file:/C:/Users/Declan/.sbt/1.0/plugins/, ...) took 149.3219ms
[debug]   Load.apply: load took 258.4998ms
[debug]   Load.apply: resolveProjects took 3.1714ms
[debug]   Load.apply: finalTransforms took 33.3295ms
[debug]   Load.apply: config.delegates took 4.6078ms
[debug]   Load.apply: Def.make(settings)... took 249.1397ms
[debug]   Load.apply: structureIndex took 58.2066ms
[debug]   Load.apply: mkStreams took 1.6284ms
[info] loading global plugins from C:\Users\Declan\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 1338.1636ms
[debug]           Load.loadUnit: plugins took 15.6803ms
[debug]           Load.loadUnit: defsScala took 0.002ms
[debug] [Loading] Scanning directory C:\Users\Declan\IdeaProjects\declanfinalproject\project
[debug]             Load.loadUnit: mkEval took 3.6566ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Declan\IdeaProjects\declanfinalproject\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.5377 ms
[info] loading settings for project declanfinalproject-build from idea.sbt ...
[debug]               Load.resolveProject(declanfinalproject-build) took 1.6781ms
[debug]             Load.loadTransitive: finalizeProject(Project(id declanfinalproject-build, base: C:\Users\Declan\IdeaProjects\declanfinalproject\project, plugins: List(<none>))) took 3.6383ms
[debug] [Loading] Done in C:\Users\Declan\IdeaProjects\declanfinalproject\project, returning: (declanfinalproject-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1121.8756ms
[debug]           Load.loadUnit: cleanEvalClasses took 2.671ms
[debug]         Load.loadUnit(file:/C:/Users/Declan/IdeaProjects/declanfinalproject/project/, ...) took 1140.6988ms
[debug]       Load.apply: load took 1141.5577ms
[debug]       Load.apply: resolveProjects took 0.1576ms
[debug]       Load.apply: finalTransforms took 16.7968ms
[debug]       Load.apply: config.delegates took 0.8307ms
[debug]       Load.apply: Def.make(settings)... took 60.7901ms
[debug]       Load.apply: structureIndex took 15.6919ms
[debug]       Load.apply: mkStreams took 0.0047ms
[info] loading project definition from C:\Users\Declan\IdeaProjects\declanfinalproject\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1441.4302ms
[debug]     Load.loadUnit: defsScala took 0.0025ms
[debug] [Loading] Scanning directory C:\Users\Declan\IdeaProjects\declanfinalproject
[debug]       Load.loadUnit: mkEval took 0.1884ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.5554 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 13.8527ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Declan\IdeaProjects\declanfinalproject, plugins: List(<none>))) took 16.8078ms
[debug] [Loading] Done in C:\Users\Declan\IdeaProjects\declanfinalproject, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 675.0459ms
[debug]     Load.loadUnit: cleanEvalClasses took 4.5544ms
[debug]   Load.loadUnit(file:/C:/Users/Declan/IdeaProjects/declanfinalproject/, ...) took 2121.4735ms
[debug] Load.apply: load took 2122.7671ms
[debug] Load.apply: resolveProjects took 0.1096ms
[debug] Load.apply: finalTransforms took 15.1654ms
[debug] Load.apply: config.delegates took 0.2016ms
[debug] Load.apply: Def.make(settings)... took 39.5868ms
[debug] Load.apply: structureIndex took 13.3352ms
[debug] Load.apply: mkStreams took 0.0031ms
[info] set current project to declanfinalproject (in build file:/C:/Users/Declan/IdeaProjects/declanfinalproject/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 49658 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 49658, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to declanfinalproject (in build file:/C:/Users/Declan/IdeaProjects/declanfinalproject/)
[debug] > Exec(idea-shell, None, None)
